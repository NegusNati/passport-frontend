/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestRouteImport } from './routes/test'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CalendarRouteImport } from './routes/calendar'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PassportsIndexRouteImport } from './routes/passports/index'
import { Route as LocationsIndexRouteImport } from './routes/locations/index'
import { Route as ArticlesIndexRouteImport } from './routes/articles/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as PassportsPassportIdRouteImport } from './routes/passports/$passportId'
import { Route as LocationsLocationSlugRouteImport } from './routes/locations/$locationSlug'
import { Route as ArticlesSlugRouteImport } from './routes/articles/$slug'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminPdfImportRouteImport } from './routes/admin/pdf-import'
import { Route as AdminPassportsRouteImport } from './routes/admin/passports'
import { Route as AdminArticlesRouteImport } from './routes/admin/articles'
import { Route as AdminAdvertisementsRouteImport } from './routes/admin/advertisements'
import { Route as AdminAdvertisementRequestsRouteImport } from './routes/admin/advertisement-requests'
import { Route as advertismentAdvertismentRouteImport } from './routes/(advertisment)/advertisment'
import { Route as advertismentAdvertisementRequestsRouteImport } from './routes/(advertisment)/advertisement-requests'
import { Route as AdminArticlesIndexRouteImport } from './routes/admin/articles.index'
import { Route as AdminAdvertisementsIndexRouteImport } from './routes/admin/advertisements.index'
import { Route as AdminAdvertisementRequestsIndexRouteImport } from './routes/admin/advertisement-requests.index'
import { Route as AdminUsersUserIdRouteImport } from './routes/admin/users.$userId'
import { Route as AdminPassportsNewRouteImport } from './routes/admin/passports.new'
import { Route as AdminHorizonDashboardRouteImport } from './routes/admin/horizon.dashboard'
import { Route as AdminArticlesNewRouteImport } from './routes/admin/articles.new'
import { Route as AdminArticlesSlugRouteImport } from './routes/admin/articles.$slug'
import { Route as AdminAdvertisementsStatsRouteImport } from './routes/admin/advertisements.stats'
import { Route as AdminAdvertisementsNewRouteImport } from './routes/admin/advertisements.new'
import { Route as AdminAdvertisementsIdRouteImport } from './routes/admin/advertisements.$id'

const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarRoute = CalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const PassportsIndexRoute = PassportsIndexRouteImport.update({
  id: '/passports/',
  path: '/passports/',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationsIndexRoute = LocationsIndexRouteImport.update({
  id: '/locations/',
  path: '/locations/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesIndexRoute = ArticlesIndexRouteImport.update({
  id: '/articles/',
  path: '/articles/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const PassportsPassportIdRoute = PassportsPassportIdRouteImport.update({
  id: '/passports/$passportId',
  path: '/passports/$passportId',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationsLocationSlugRoute = LocationsLocationSlugRouteImport.update({
  id: '/locations/$locationSlug',
  path: '/locations/$locationSlug',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesSlugRoute = ArticlesSlugRouteImport.update({
  id: '/articles/$slug',
  path: '/articles/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)
const AdminPdfImportRoute = AdminPdfImportRouteImport.update({
  id: '/pdf-import',
  path: '/pdf-import',
  getParentRoute: () => AdminRoute,
} as any)
const AdminPassportsRoute = AdminPassportsRouteImport.update({
  id: '/passports',
  path: '/passports',
  getParentRoute: () => AdminRoute,
} as any)
const AdminArticlesRoute = AdminArticlesRouteImport.update({
  id: '/articles',
  path: '/articles',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAdvertisementsRoute = AdminAdvertisementsRouteImport.update({
  id: '/advertisements',
  path: '/advertisements',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAdvertisementRequestsRoute =
  AdminAdvertisementRequestsRouteImport.update({
    id: '/advertisement-requests',
    path: '/advertisement-requests',
    getParentRoute: () => AdminRoute,
  } as any)
const advertismentAdvertismentRoute =
  advertismentAdvertismentRouteImport.update({
    id: '/(advertisment)/advertisment',
    path: '/advertisment',
    getParentRoute: () => rootRouteImport,
  } as any)
const advertismentAdvertisementRequestsRoute =
  advertismentAdvertisementRequestsRouteImport.update({
    id: '/(advertisment)/advertisement-requests',
    path: '/advertisement-requests',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminArticlesIndexRoute = AdminArticlesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminArticlesRoute,
} as any)
const AdminAdvertisementsIndexRoute =
  AdminAdvertisementsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminAdvertisementsRoute,
  } as any)
const AdminAdvertisementRequestsIndexRoute =
  AdminAdvertisementRequestsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminAdvertisementRequestsRoute,
  } as any)
const AdminUsersUserIdRoute = AdminUsersUserIdRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => AdminUsersRoute,
} as any)
const AdminPassportsNewRoute = AdminPassportsNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AdminPassportsRoute,
} as any)
const AdminHorizonDashboardRoute = AdminHorizonDashboardRouteImport.update({
  id: '/horizon/dashboard',
  path: '/horizon/dashboard',
  getParentRoute: () => AdminRoute,
} as any)
const AdminArticlesNewRoute = AdminArticlesNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AdminArticlesRoute,
} as any)
const AdminArticlesSlugRoute = AdminArticlesSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => AdminArticlesRoute,
} as any)
const AdminAdvertisementsStatsRoute =
  AdminAdvertisementsStatsRouteImport.update({
    id: '/stats',
    path: '/stats',
    getParentRoute: () => AdminAdvertisementsRoute,
  } as any)
const AdminAdvertisementsNewRoute = AdminAdvertisementsNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AdminAdvertisementsRoute,
} as any)
const AdminAdvertisementsIdRoute = AdminAdvertisementsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminAdvertisementsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/calendar': typeof CalendarRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/advertisement-requests': typeof advertismentAdvertisementRequestsRoute
  '/advertisment': typeof advertismentAdvertismentRoute
  '/admin/advertisement-requests': typeof AdminAdvertisementRequestsRouteWithChildren
  '/admin/advertisements': typeof AdminAdvertisementsRouteWithChildren
  '/admin/articles': typeof AdminArticlesRouteWithChildren
  '/admin/passports': typeof AdminPassportsRouteWithChildren
  '/admin/pdf-import': typeof AdminPdfImportRoute
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/articles/$slug': typeof ArticlesSlugRoute
  '/locations/$locationSlug': typeof LocationsLocationSlugRoute
  '/passports/$passportId': typeof PassportsPassportIdRoute
  '/admin/': typeof AdminIndexRoute
  '/articles': typeof ArticlesIndexRoute
  '/locations': typeof LocationsIndexRoute
  '/passports': typeof PassportsIndexRoute
  '/admin/advertisements/$id': typeof AdminAdvertisementsIdRoute
  '/admin/advertisements/new': typeof AdminAdvertisementsNewRoute
  '/admin/advertisements/stats': typeof AdminAdvertisementsStatsRoute
  '/admin/articles/$slug': typeof AdminArticlesSlugRoute
  '/admin/articles/new': typeof AdminArticlesNewRoute
  '/admin/horizon/dashboard': typeof AdminHorizonDashboardRoute
  '/admin/passports/new': typeof AdminPassportsNewRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/admin/advertisement-requests/': typeof AdminAdvertisementRequestsIndexRoute
  '/admin/advertisements/': typeof AdminAdvertisementsIndexRoute
  '/admin/articles/': typeof AdminArticlesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/advertisement-requests': typeof advertismentAdvertisementRequestsRoute
  '/advertisment': typeof advertismentAdvertismentRoute
  '/admin/passports': typeof AdminPassportsRouteWithChildren
  '/admin/pdf-import': typeof AdminPdfImportRoute
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/articles/$slug': typeof ArticlesSlugRoute
  '/locations/$locationSlug': typeof LocationsLocationSlugRoute
  '/passports/$passportId': typeof PassportsPassportIdRoute
  '/admin': typeof AdminIndexRoute
  '/articles': typeof ArticlesIndexRoute
  '/locations': typeof LocationsIndexRoute
  '/passports': typeof PassportsIndexRoute
  '/admin/advertisements/$id': typeof AdminAdvertisementsIdRoute
  '/admin/advertisements/new': typeof AdminAdvertisementsNewRoute
  '/admin/advertisements/stats': typeof AdminAdvertisementsStatsRoute
  '/admin/articles/$slug': typeof AdminArticlesSlugRoute
  '/admin/articles/new': typeof AdminArticlesNewRoute
  '/admin/horizon/dashboard': typeof AdminHorizonDashboardRoute
  '/admin/passports/new': typeof AdminPassportsNewRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/admin/advertisement-requests': typeof AdminAdvertisementRequestsIndexRoute
  '/admin/advertisements': typeof AdminAdvertisementsIndexRoute
  '/admin/articles': typeof AdminArticlesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/calendar': typeof CalendarRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/(advertisment)/advertisement-requests': typeof advertismentAdvertisementRequestsRoute
  '/(advertisment)/advertisment': typeof advertismentAdvertismentRoute
  '/admin/advertisement-requests': typeof AdminAdvertisementRequestsRouteWithChildren
  '/admin/advertisements': typeof AdminAdvertisementsRouteWithChildren
  '/admin/articles': typeof AdminArticlesRouteWithChildren
  '/admin/passports': typeof AdminPassportsRouteWithChildren
  '/admin/pdf-import': typeof AdminPdfImportRoute
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/articles/$slug': typeof ArticlesSlugRoute
  '/locations/$locationSlug': typeof LocationsLocationSlugRoute
  '/passports/$passportId': typeof PassportsPassportIdRoute
  '/admin/': typeof AdminIndexRoute
  '/articles/': typeof ArticlesIndexRoute
  '/locations/': typeof LocationsIndexRoute
  '/passports/': typeof PassportsIndexRoute
  '/admin/advertisements/$id': typeof AdminAdvertisementsIdRoute
  '/admin/advertisements/new': typeof AdminAdvertisementsNewRoute
  '/admin/advertisements/stats': typeof AdminAdvertisementsStatsRoute
  '/admin/articles/$slug': typeof AdminArticlesSlugRoute
  '/admin/articles/new': typeof AdminArticlesNewRoute
  '/admin/horizon/dashboard': typeof AdminHorizonDashboardRoute
  '/admin/passports/new': typeof AdminPassportsNewRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/admin/advertisement-requests/': typeof AdminAdvertisementRequestsIndexRoute
  '/admin/advertisements/': typeof AdminAdvertisementsIndexRoute
  '/admin/articles/': typeof AdminArticlesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/calendar'
    | '/login'
    | '/profile'
    | '/register'
    | '/test'
    | '/advertisement-requests'
    | '/advertisment'
    | '/admin/advertisement-requests'
    | '/admin/advertisements'
    | '/admin/articles'
    | '/admin/passports'
    | '/admin/pdf-import'
    | '/admin/users'
    | '/articles/$slug'
    | '/locations/$locationSlug'
    | '/passports/$passportId'
    | '/admin/'
    | '/articles'
    | '/locations'
    | '/passports'
    | '/admin/advertisements/$id'
    | '/admin/advertisements/new'
    | '/admin/advertisements/stats'
    | '/admin/articles/$slug'
    | '/admin/articles/new'
    | '/admin/horizon/dashboard'
    | '/admin/passports/new'
    | '/admin/users/$userId'
    | '/admin/advertisement-requests/'
    | '/admin/advertisements/'
    | '/admin/articles/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calendar'
    | '/login'
    | '/profile'
    | '/register'
    | '/test'
    | '/advertisement-requests'
    | '/advertisment'
    | '/admin/passports'
    | '/admin/pdf-import'
    | '/admin/users'
    | '/articles/$slug'
    | '/locations/$locationSlug'
    | '/passports/$passportId'
    | '/admin'
    | '/articles'
    | '/locations'
    | '/passports'
    | '/admin/advertisements/$id'
    | '/admin/advertisements/new'
    | '/admin/advertisements/stats'
    | '/admin/articles/$slug'
    | '/admin/articles/new'
    | '/admin/horizon/dashboard'
    | '/admin/passports/new'
    | '/admin/users/$userId'
    | '/admin/advertisement-requests'
    | '/admin/advertisements'
    | '/admin/articles'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/calendar'
    | '/login'
    | '/profile'
    | '/register'
    | '/test'
    | '/(advertisment)/advertisement-requests'
    | '/(advertisment)/advertisment'
    | '/admin/advertisement-requests'
    | '/admin/advertisements'
    | '/admin/articles'
    | '/admin/passports'
    | '/admin/pdf-import'
    | '/admin/users'
    | '/articles/$slug'
    | '/locations/$locationSlug'
    | '/passports/$passportId'
    | '/admin/'
    | '/articles/'
    | '/locations/'
    | '/passports/'
    | '/admin/advertisements/$id'
    | '/admin/advertisements/new'
    | '/admin/advertisements/stats'
    | '/admin/articles/$slug'
    | '/admin/articles/new'
    | '/admin/horizon/dashboard'
    | '/admin/passports/new'
    | '/admin/users/$userId'
    | '/admin/advertisement-requests/'
    | '/admin/advertisements/'
    | '/admin/articles/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  CalendarRoute: typeof CalendarRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
  TestRoute: typeof TestRoute
  advertismentAdvertisementRequestsRoute: typeof advertismentAdvertisementRequestsRoute
  advertismentAdvertismentRoute: typeof advertismentAdvertismentRoute
  ArticlesSlugRoute: typeof ArticlesSlugRoute
  LocationsLocationSlugRoute: typeof LocationsLocationSlugRoute
  PassportsPassportIdRoute: typeof PassportsPassportIdRoute
  ArticlesIndexRoute: typeof ArticlesIndexRoute
  LocationsIndexRoute: typeof LocationsIndexRoute
  PassportsIndexRoute: typeof PassportsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/passports/': {
      id: '/passports/'
      path: '/passports'
      fullPath: '/passports'
      preLoaderRoute: typeof PassportsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/locations/': {
      id: '/locations/'
      path: '/locations'
      fullPath: '/locations'
      preLoaderRoute: typeof LocationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/': {
      id: '/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/passports/$passportId': {
      id: '/passports/$passportId'
      path: '/passports/$passportId'
      fullPath: '/passports/$passportId'
      preLoaderRoute: typeof PassportsPassportIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/locations/$locationSlug': {
      id: '/locations/$locationSlug'
      path: '/locations/$locationSlug'
      fullPath: '/locations/$locationSlug'
      preLoaderRoute: typeof LocationsLocationSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/$slug': {
      id: '/articles/$slug'
      path: '/articles/$slug'
      fullPath: '/articles/$slug'
      preLoaderRoute: typeof ArticlesSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/pdf-import': {
      id: '/admin/pdf-import'
      path: '/pdf-import'
      fullPath: '/admin/pdf-import'
      preLoaderRoute: typeof AdminPdfImportRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/passports': {
      id: '/admin/passports'
      path: '/passports'
      fullPath: '/admin/passports'
      preLoaderRoute: typeof AdminPassportsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/articles': {
      id: '/admin/articles'
      path: '/articles'
      fullPath: '/admin/articles'
      preLoaderRoute: typeof AdminArticlesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/advertisements': {
      id: '/admin/advertisements'
      path: '/advertisements'
      fullPath: '/admin/advertisements'
      preLoaderRoute: typeof AdminAdvertisementsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/advertisement-requests': {
      id: '/admin/advertisement-requests'
      path: '/advertisement-requests'
      fullPath: '/admin/advertisement-requests'
      preLoaderRoute: typeof AdminAdvertisementRequestsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/(advertisment)/advertisment': {
      id: '/(advertisment)/advertisment'
      path: '/advertisment'
      fullPath: '/advertisment'
      preLoaderRoute: typeof advertismentAdvertismentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(advertisment)/advertisement-requests': {
      id: '/(advertisment)/advertisement-requests'
      path: '/advertisement-requests'
      fullPath: '/advertisement-requests'
      preLoaderRoute: typeof advertismentAdvertisementRequestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/articles/': {
      id: '/admin/articles/'
      path: '/'
      fullPath: '/admin/articles/'
      preLoaderRoute: typeof AdminArticlesIndexRouteImport
      parentRoute: typeof AdminArticlesRoute
    }
    '/admin/advertisements/': {
      id: '/admin/advertisements/'
      path: '/'
      fullPath: '/admin/advertisements/'
      preLoaderRoute: typeof AdminAdvertisementsIndexRouteImport
      parentRoute: typeof AdminAdvertisementsRoute
    }
    '/admin/advertisement-requests/': {
      id: '/admin/advertisement-requests/'
      path: '/'
      fullPath: '/admin/advertisement-requests/'
      preLoaderRoute: typeof AdminAdvertisementRequestsIndexRouteImport
      parentRoute: typeof AdminAdvertisementRequestsRoute
    }
    '/admin/users/$userId': {
      id: '/admin/users/$userId'
      path: '/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminUsersUserIdRouteImport
      parentRoute: typeof AdminUsersRoute
    }
    '/admin/passports/new': {
      id: '/admin/passports/new'
      path: '/new'
      fullPath: '/admin/passports/new'
      preLoaderRoute: typeof AdminPassportsNewRouteImport
      parentRoute: typeof AdminPassportsRoute
    }
    '/admin/horizon/dashboard': {
      id: '/admin/horizon/dashboard'
      path: '/horizon/dashboard'
      fullPath: '/admin/horizon/dashboard'
      preLoaderRoute: typeof AdminHorizonDashboardRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/articles/new': {
      id: '/admin/articles/new'
      path: '/new'
      fullPath: '/admin/articles/new'
      preLoaderRoute: typeof AdminArticlesNewRouteImport
      parentRoute: typeof AdminArticlesRoute
    }
    '/admin/articles/$slug': {
      id: '/admin/articles/$slug'
      path: '/$slug'
      fullPath: '/admin/articles/$slug'
      preLoaderRoute: typeof AdminArticlesSlugRouteImport
      parentRoute: typeof AdminArticlesRoute
    }
    '/admin/advertisements/stats': {
      id: '/admin/advertisements/stats'
      path: '/stats'
      fullPath: '/admin/advertisements/stats'
      preLoaderRoute: typeof AdminAdvertisementsStatsRouteImport
      parentRoute: typeof AdminAdvertisementsRoute
    }
    '/admin/advertisements/new': {
      id: '/admin/advertisements/new'
      path: '/new'
      fullPath: '/admin/advertisements/new'
      preLoaderRoute: typeof AdminAdvertisementsNewRouteImport
      parentRoute: typeof AdminAdvertisementsRoute
    }
    '/admin/advertisements/$id': {
      id: '/admin/advertisements/$id'
      path: '/$id'
      fullPath: '/admin/advertisements/$id'
      preLoaderRoute: typeof AdminAdvertisementsIdRouteImport
      parentRoute: typeof AdminAdvertisementsRoute
    }
  }
}

interface AdminAdvertisementRequestsRouteChildren {
  AdminAdvertisementRequestsIndexRoute: typeof AdminAdvertisementRequestsIndexRoute
}

const AdminAdvertisementRequestsRouteChildren: AdminAdvertisementRequestsRouteChildren =
  {
    AdminAdvertisementRequestsIndexRoute: AdminAdvertisementRequestsIndexRoute,
  }

const AdminAdvertisementRequestsRouteWithChildren =
  AdminAdvertisementRequestsRoute._addFileChildren(
    AdminAdvertisementRequestsRouteChildren,
  )

interface AdminAdvertisementsRouteChildren {
  AdminAdvertisementsIdRoute: typeof AdminAdvertisementsIdRoute
  AdminAdvertisementsNewRoute: typeof AdminAdvertisementsNewRoute
  AdminAdvertisementsStatsRoute: typeof AdminAdvertisementsStatsRoute
  AdminAdvertisementsIndexRoute: typeof AdminAdvertisementsIndexRoute
}

const AdminAdvertisementsRouteChildren: AdminAdvertisementsRouteChildren = {
  AdminAdvertisementsIdRoute: AdminAdvertisementsIdRoute,
  AdminAdvertisementsNewRoute: AdminAdvertisementsNewRoute,
  AdminAdvertisementsStatsRoute: AdminAdvertisementsStatsRoute,
  AdminAdvertisementsIndexRoute: AdminAdvertisementsIndexRoute,
}

const AdminAdvertisementsRouteWithChildren =
  AdminAdvertisementsRoute._addFileChildren(AdminAdvertisementsRouteChildren)

interface AdminArticlesRouteChildren {
  AdminArticlesSlugRoute: typeof AdminArticlesSlugRoute
  AdminArticlesNewRoute: typeof AdminArticlesNewRoute
  AdminArticlesIndexRoute: typeof AdminArticlesIndexRoute
}

const AdminArticlesRouteChildren: AdminArticlesRouteChildren = {
  AdminArticlesSlugRoute: AdminArticlesSlugRoute,
  AdminArticlesNewRoute: AdminArticlesNewRoute,
  AdminArticlesIndexRoute: AdminArticlesIndexRoute,
}

const AdminArticlesRouteWithChildren = AdminArticlesRoute._addFileChildren(
  AdminArticlesRouteChildren,
)

interface AdminPassportsRouteChildren {
  AdminPassportsNewRoute: typeof AdminPassportsNewRoute
}

const AdminPassportsRouteChildren: AdminPassportsRouteChildren = {
  AdminPassportsNewRoute: AdminPassportsNewRoute,
}

const AdminPassportsRouteWithChildren = AdminPassportsRoute._addFileChildren(
  AdminPassportsRouteChildren,
)

interface AdminUsersRouteChildren {
  AdminUsersUserIdRoute: typeof AdminUsersUserIdRoute
}

const AdminUsersRouteChildren: AdminUsersRouteChildren = {
  AdminUsersUserIdRoute: AdminUsersUserIdRoute,
}

const AdminUsersRouteWithChildren = AdminUsersRoute._addFileChildren(
  AdminUsersRouteChildren,
)

interface AdminRouteChildren {
  AdminAdvertisementRequestsRoute: typeof AdminAdvertisementRequestsRouteWithChildren
  AdminAdvertisementsRoute: typeof AdminAdvertisementsRouteWithChildren
  AdminArticlesRoute: typeof AdminArticlesRouteWithChildren
  AdminPassportsRoute: typeof AdminPassportsRouteWithChildren
  AdminPdfImportRoute: typeof AdminPdfImportRoute
  AdminUsersRoute: typeof AdminUsersRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  AdminHorizonDashboardRoute: typeof AdminHorizonDashboardRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdvertisementRequestsRoute: AdminAdvertisementRequestsRouteWithChildren,
  AdminAdvertisementsRoute: AdminAdvertisementsRouteWithChildren,
  AdminArticlesRoute: AdminArticlesRouteWithChildren,
  AdminPassportsRoute: AdminPassportsRouteWithChildren,
  AdminPdfImportRoute: AdminPdfImportRoute,
  AdminUsersRoute: AdminUsersRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  AdminHorizonDashboardRoute: AdminHorizonDashboardRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  CalendarRoute: CalendarRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
  TestRoute: TestRoute,
  advertismentAdvertisementRequestsRoute:
    advertismentAdvertisementRequestsRoute,
  advertismentAdvertismentRoute: advertismentAdvertismentRoute,
  ArticlesSlugRoute: ArticlesSlugRoute,
  LocationsLocationSlugRoute: LocationsLocationSlugRoute,
  PassportsPassportIdRoute: PassportsPassportIdRoute,
  ArticlesIndexRoute: ArticlesIndexRoute,
  LocationsIndexRoute: LocationsIndexRoute,
  PassportsIndexRoute: PassportsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
